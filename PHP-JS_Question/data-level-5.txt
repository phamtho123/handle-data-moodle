
Đoạn code sau đây phát sinh ra kết quả gì <?php $x = array(  "aaa",  "ttt",  "www",  "ttt",  "yyy",  "tttt" ); $y = array_count_values($x); echo $y[ttt];
A. 2
B. 3
C. 1
D. 4
ANSWER: A

<?php $score = 1234; $scoreboard = (array)$score; echo $scoreboard[0]; ?>   Kết quả của đoạn code dưới đây là?
A. 1
B. Error
C. 1234
D. 2
ANSWER: C

<?php $total = "25 students"; $more = 10; $total = $total + $more; echo "$total"; ?>   Kết quả của đoạn code dưới đây là?
A. Error
B. 35 students
C. 35
D. 25 students
ANSWER: C

<?php function one($string) {  echo "I am " . $String; } one("Batman"); ?>   Kết quả của đoạn code dưới đây là?
A. I am Batman
B. I am
C. Batman
D. Có lỗi xảy ra
ANSWER: D

<?php $x = 0; if ($x == 1) if ($x >= 0) print "true"; else print "false"; ?>   Kết quả của đoạn code dưới đây là?
A. true
B. false
C. error
D. Không có kết quả in ra
ANSWER: D

<?php $a = 1; if (echo $a) print "True"; else print "False"; ?>   Kết quả của đoạn code dưới đây là?
A. true
B. false
C. Xảy ra lỗi
D. Không có kết quả trả về
ANSWER: C

<?php $a = 1; if (print $a) print "True"; else print "False"; ?>   Kết quả của đoạn code dưới đây là?
A. 1True
B. False
C. Có lỗi xảy ra
D. Màn hình trắng
ANSWER: A

<?php if (preg_match("/[^a-z589]+/", "AB asdfg589nmGH", $array)) {  print "<pre>\n";  print_r($array[0]);  print "</pre>\n"; } ?>   Xem đoạn mã lệnh sau đây. Sau khi thực hiện đoạn mã trên kết quả hiển thị sẽ là gì ?
A. 589
B. ABGH
C. asdfg589nm
D. AB
ANSWER: D

Thực hiện kiểm tra nếu biến i không bằng 5, câu lệnh nào là đúng?
A. if (i != 5)
B. if i =! 5 then
C. if i <> 5
D. if (i <> 5)
ANSWER: A

var a = [9]; var b = [10]; console.log(a == 9); console.log(b == 10); console.log(a < b);   Kết quả đoạn code sau là:
A. true true true
B. false false false
C. true true false
D. false false true
ANSWER: C

function greatestNumberInArray(arr) {  let greatest = 0;  for (let i = 0; i < arr.length; i++) {  if (greatest < arr[i]) {  greatest = arr[i];  }  }  return greatest; }   Hàm greatestNumberInArray dưới đây có get được phần tử lớn nhất cho mọi array không?
A. Yes
B. No
ANSWER: B

const arr = [  x => x * 1,  x => x * 2,  x => x * 3,  x => x * 4 ]; console.log(arr.reduce((agg, el) => agg + el(agg), 1));   Kết quả là:
A. 1
B. 60
C. 100
D. 120
ANSWER: D

const ar = [5, 1, 3, 7, 25]; const ar1 = ar; console.log(ar1.sort()); ([5, 25].indexOf(ar[1]) != -1 && _x0001_console.log(ar.reverse())) || (ar[3] == 25 && console.log(ar)); console.log(ar1);   Cho đoạn code sau. Kết quả là:
A. [1, 3, 5, 7, 25] [7, 5, 3, 25, 1] [1, 25, 3, 5, 7] [1, 25, 3, 5, 7]
B. [1, 25, 3, 5, 7] [5,1,3,7,25]
C. [1, 25, 3, 5, 7] [7, 5, 3, 25, 1] [7, 5, 3, 25, 1] [7, 5, 3, 25, 1]
D. An error is thrown
ANSWER: C

const arr1 = ['a', 'b', 'c']; const arr2 = ['b', 'c', 'a']; console.log(  arr1.sort() === arr1,  arr2.sort() == arr2,  arr1.sort() === arr2.sort() );   Cho đoạn code sau. Kết quả là:
A. true true true
B. true true false
C. false false false
D. true false true
ANSWER: B

function ArrayBoolean() {  if ([] == true && [1] == true) return [true, true];  else if ([] == true && [1] == false) return [true, false];  else if ([] == false && [1] == true) return [false, true];  else return [false, false]; } ArrayBoolean();   Cho đoạn code sau. Kết quả là:
A. [true, true]
B. [true, false]
C. [false, true]
D. [false, false]
ANSWER: C

let dog = {  breed: 'Border Collie',  sound: 'Wooh',  getBreed: () => {  return this.breed;  },  getSound: function() {  return this.sound;  } }; console.log(dog.getBreed(), dog.getSound());   Cho đoạn code sau. Kết quả là:
A. Border Collie, Wooh
B. Border Collie, undefined
C. undefined, Wooh
D. undefined, undefined
ANSWER: C

const person = { name: 'duthaho' }; function sayHi(age) {  return `${this.name} is ${age}`; } console.log(sayHi.call(person, 69)); console.log(sayHi.bind(person, 69));   Đoạn code sau sẽ cho kết quả như thế nào?
A. undefined is 69 duthaho is 69
B. function function
C. duthaho is 69 duthaho is 69
D. duthaho is 69 function
ANSWER: D

function withVar() {  const b = () => a;  var a = 24;  return b; } function withLet() {  const b = () => a;  let a = 24;  return b; } function changingValue() {  let a = 24;  const b = () => a;  a = 42;  return b; } console.log(withVar()()); // ?? console.log(withLet()()); // ?? console.log(changingValue()()); // ??   Kết quả đoạn code sau là:
A. undefined Error 42
B. 24 Error 24
C. 24 24 42
D. undefined Error 24
ANSWER: C

function Person(firstName, lastName) {  this.firstName = firstName;  this.lastName = lastName; } const ti = new Person('du', 'ti'); const teo = Person('du', 'teo'); console.log(ti); console.log(teo);   Đoạn code sau sẽ có kết quả là:
A. Person {firstName: "du", lastName: "ti"} undefined
B. Person {firstName: "du", lastName: "ti"} Person {firstName: "du", lastName:"teo"}'
C. Person {firstName: "du", lastName: "ti"} {}
D. Person {firstName: "du", lastName: "ti"} ReferenceError
ANSWER: A

bar(); var bar; function bar() { _x0001_console.log('first'); } bar = function () { _x0001_console.log('second'); }; bar(); foo(); function foo() { _x0001_console.log(1); } var foo = function () { _x0001_console.log(2); }; function foo() { _x0001_console.log(3); } foo();   Đoạn code sau sẽ cho kết quả:
A. second first 1 3
B. first second 3 2
C. second first 3 3
D. first second 3 3
ANSWER: B

function sayHi() {  return (() => 0)(); } console.log(typeof sayHi());   Cho đoạn code sau, kết quả là:
A. object
B. number
C. function
D. undefined
ANSWER: B

const a = {  stringField: 'Joe',  numberField: 123,  dateField: new Date('1995-12-17T03:24:00'),  nestedField: { field: 'Nested' } }; const b = JSON.parse(JSON.stringify(a)); console.log(  a.stringField === b.stringField,  a.numberField === b.numberField,  a.dateField === b.dateField,  a.nestedField.field === b.nestedField.field );   Đoạn code sau sẽ có kết quả:
A. true true true true
B. true true true false
C. true true false true
D. false false false false
ANSWER: C

const notifications = 1; console.log(  `You have ${notifications} notification${notifications !==  1 && 's'}` );   Đoạn code trên sẽ có kết quả là:
A. You have 1 notification
B. You have 1 notifications
C. You have 1 notificationfalse
ANSWER: C

const compare = a => a === a; console.log(compare(null)); console.log(compare(undefined)); console.log(compare(NaN)); console.log(compare([NaN]));   Cho đoạn code sau, kết quả sẽ là:
A. true true true true
B. true false true true
C. true true false true
D. true true false false
ANSWER: C

const n = 5; console.log(1..n); // ?   Cho đoạn code sau, kết quả là:
A. [1, 2, 3, 4, 5]
B. undefined
C. Syntax error
ANSWER: B

const a = {  stringField: 'Joe',  nestedField: { field: 'Nested' },  functionField: () => 'aReturn' }; const b = Object.assign({}, a); b.stringField = 'Bob'; b.nestedField.field = 'Changed'; b.functionField = () => 'bReturn'; console.log(  a.stringField,  a.nestedField.field,  a.functionField() );   Cho đoạn code sau, kết quả là:
A. Joe Nested aReturn
B. Bob Changed bReturn
C. Joe Changed aReturn
D. Bob Nested bReturn
ANSWER: C

const url = 'quiz.duthaho.com'; const { length: ln, [ln - 1]: domain = 'quiz' } = url  .split('.')  .filter(Boolean); console.log(domain);   Cho đoạn code sau, kết quả là:
A. "quiz"
B. "duthaho"
C. "com"
D. undefined
ANSWER: C

const obj = { a: 'one', b: 'two', a: 'three' }; console.log(obj);   Cho đoạn code, kết quả là
A. {a: "one", b: "two" }
B. {b: "two", a: "three" }
C. {a: "three", b: "two" }
D. SyntaxError
ANSWER: C

const user = {  name: 'lao Hac',  age: 69,  pet: {  type: 'cho',  name: 'vang'  } }; Object.freeze(user); user.pet.name = 'shiba'; console.log(user.pet.name);   Kết quả của đoạn code là:
A. shiba
B. vang
C. An error is thrown
ANSWER: A

const obj = {  1: 1,  2: 2,  3: 3 }; console.log(Object.keys(obj), Object.values(obj));   Đoạn code sau, kết quả sẽ là:
A. [1, 2, 3] ["1", "2", "3"]
B. ["1", "2", "3"] [1, 2, 3]
C. ["1", "2", "3"] ["1", "2", "3"]
ANSWER: B

const obj = { 1: 'a', 2: 'b', 3: 'c' }; const set = new Set([1, 2, 3, 4, 5]); obj.hasOwnProperty('1'); obj.hasOwnProperty(1); set.has('1'); set.has(1);   Cho đoạn code sau, kết quả sẽ là:
A. false true false true
B. false true true true
C. true true false true
D. true true true true
ANSWER: C

const a = {}; const b = { key: 'b' }; const c = { key: 'c' }; a[b] = 123; a[c] = 456; console.log(a[b]);   Đoạn code sẽ cho kết quả
A. 123
B. 456
C. undefined
D. ReferenceError
ANSWER: B

const scrambled = {  2: 'e',  5: 'o',  1: 'h',  4: 'l',  3: 'l' }; const result = Object.values(scrambled).reduce(  (agg, el) => agg + el,  '' ); console.log(result);   Đoạn code sau sẽ cho kết quả là:
A. hello
B. eohll
C. Cả A, B đều đúng
D. Cả A, B đều sai
ANSWER: A

let b = '4'; console.log(b++ + 3, b);   Đoạn code sau sẽ cho kết quả:
A. 44 4
B. 8 5
C. 7 5
D. 43 5
ANSWER: C

console.log(1 < 2 < 3); console.log(3 > 2 > 1);   Đoạn code sau sẽ cho kết quả gì?
A. true true
B. true false
C. false false
D. undefined undefined
ANSWER: B

Trường hợp nào đúng? (1) Bạn có thể đặt thuộc tính font cho toàn bộ tài liệu bằng cách đặt nó vào trong thẻ body. (2) Bạn có thể đặt thuộc tính font cho từng từ(word), từng đoạn và từng phần tử trong một trang html
A. Câu 1 đúng, câu 2 sai
B. Câu 2 dúng, câu 1 sai
C. Cả hai câu đều sai
D. Cả hai câu đều đúng
ANSWER: B
